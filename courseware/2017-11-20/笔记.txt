1.geolocation——定位
  PC——IP地址
    精度比较低
    IP库
      Chrome -> Google
  手机——GPS

  window.navigator.geolocation
    单次    getCurrentPosition(成功, 失败, 参数)
      enableHighAccuracy      高精度模式——更慢、更费电
      timeout                 超时
      maximumAge              缓存时间

      结果：
        latitude/longitude    纬度/经度
        altitude              海拔高度

        accuracy              精确度
        altitudeAccuracy      高度精确度
        heading               朝向
        speed                 速度
    监听    watchPosition(成功, 失败, 参数)

2.video、audio
  video——视频
    src       地址
    autoplay  自动播放
    loop      循环播放
    poster    封面地址

  <video>
    <flash></flash>
  </video>

  video支持什么格式——通用格式mp4
    IE        wmv、mp4
    Chrome    webq、mp4
    FireFox   ogv、mp4

  audio——mp3

  JS接口
    .play()       播放
    .pause()      暂停
    .stop()       ×
      pause+currentTime
    .currentTime  当前播放位置(s)
    .duration     长度(s)
    .volume       音量：0-100
    .muted        静音：bool

3.localStorage/?


播放速度怎么设置
1.服务调整，存成多个文件
2.点播调整码率

video宽高怎么适配到div宽600, height400在容器内，并且视频不能变畸形
  W=600
  H=400

  w,h
  if(w/h>W/H){	//“偏宽一些”
    //让宽度适应容器宽度
    h=H*w/W
    w=W

  }else{	//“偏高一些”
    h=H
    w=W*h/H
  }

试看5分钟或者试听5分钟怎么做?
  不能用客户端实现
  服务器

怎么干掉 video / audio 里 自带control 的下载按钮？
  流视频

--------------------------------------------------------------------------------------------------------

localStorage(本地存储)        大(5M)/cookie(4K)
  1.大：1280倍
  2.localStorage不会被发往服务器
  3.方便

  localStorage/sessionStorage
    localStorage      永久存储
    sessionStorage    会话期存储（浏览器关了就没了）

  localStorage的用法跟json一模一样
    localStorage.a=xxx            设置
    localStorage.a                读取
    delete localStorage.a         删掉
    for in                        遍历

  sessionStorage用法和localStorage一模一样

  localStorage    特别广
  sessionStorage  没见过

--------------------------------------------------------------------------------------------------------

5.WebWorker

主机 > 程序 > 进程 > 线程 > 纤程

          多进程(重)                    多线程(轻)
开销      创建、销毁开销大               创建、销毁开销小
安全性    进程之间是隔离                 线程之间是共享
资源      每个进程独立资源               同一个进程的所有线程共享资源
共享资源  麻烦                          方便
编程难度  低（资源是独享的）             高（资源是共享的）

总结：
多进程：性能低、编写简单
多线程：性能高、编写复杂

Java、c          多进程/多线程
PHP              多进程
JS               多进程

--------------------------------------------------------------------------------------------------------

WebWorker——浏览器上实现的多进程

Web端：
主进程             UI进程
子进程(工作进程)    看不见的；只能完成计算、数据请求这些操作

优点：
1.充分利用资源(多个进程同时工作)
2.防止主进程卡住

缺点：
不能执行任何UI操作，子进程只能执行计算型任务



结论：WebWorker在工作中用的很少——Web中计算型任务就不多

--------------------------------------------------------------------------------------------------------

跨域——域不同
域=协议+域名+端口

http://www.baidu.com/
https://www.baidu.com/
http://www.baidu.com:8031/
http://abc.baidu.com/

--------------------------------------------------------------------------------------------------------

文件操作、拖拽

--------------------------------------------------------------------------------------------------------

canvas

--------------------------------------------------------------------------------------------------------

manifest——指定哪些要缓存、哪些一定不缓存、哪些如果没读到就读别的文件

--------------------------------------------------------------------------------------------------------

contenteditable

--------------------------------------------------------------------------------------------------------

预习：
FileReader
canvas
