AngularJS v1.3以上

模块
  控制器
  指令
  过滤器
  ...

指令的约束：
E   Element——元素
A   Attribute——属性
C   Class——类
M   comment——注释

组件 = HTML + CSS + JS

--------------------------------------------------------------------------------

directive ≈ 组件

--------------------------------------------------------------------------------

v1.x淘汰
angular2.x||4.x

--------------------------------------------------------------------------------

Angular4.x、Vue2.x、React

--------------------------------------------------------------------------------

1.组件化     重用、工程化、健壮性
2.状态管理   任何东西都是状态

React：
组件化、状态管理

--------------------------------------------------------------------------------

TypeScript：
越宽松越不适合做大东西；越严格越能适应大型应用

JS      松懈
Java    严格

JS唯一的前台语言，不适合大型应用

TypeScript不是独立语言——被编译成JS

TS——前台版的Java

--------------------------------------------------------------------------------

React：
Flux、Redux、RN、Server-React

JSX——babel
React——模块化、状态管理
react-dom

--------------------------------------------------------------------------------

JSX：JS+ES6+创建元素
直接写一个标签，就是元素
限制——有且仅有一个顶级标签

<div>                 √
  <span>dfasdf</span>
  <img/>
</div>

<span>dfasdf</span>
<img/>

aaadsfas

--------------------------------------------------------------------------------

跟普通HTML不同：
1.class -> className
2.for   -> htmlFor

跟HTML5不同：
1.单标签也必须闭合

--------------------------------------------------------------------------------

组件——基本特征的

类名首字母大写——Date、Array、RegExp

--------------------------------------------------------------------------------

所有组件必须得有render方法——所有的组件必须是能显示到页面中的(可渲染的)

--------------------------------------------------------------------------------

React的组件：
1.继承React.Component
2.类名首字母大写
3.必须包含render方法

--------------------------------------------------------------------------------

事件：
1.事件名首字母大写
2.必须给个函数、注意this、注意bind

--------------------------------------------------------------------------------

属性——类似：参数
1.两种传法——""、{}
2.接收的时候——this.props.xxx
3.只读的

--------------------------------------------------------------------------------

状态——

父子组件

数据交互

组件间通信

--------------------------------------------------------------------------------

"传参"有两种方法：
1.""——进去都是字符串
2.{}——进去都是

--------------------------------------------------------------------------------

React的属性和状态——类似于普通class的属性
属性——只读
状态——可以变

--------------------------------------------------------------------------------

1.组件都是以HTML标签的形式来使用(有个顶级标签、必须有render)
2.可以嵌套、通信
3.属性、状态

--------------------------------------------------------------------------------

状态、通信

数据交互

TypeScript

--------------------------------------------------------------------------------
