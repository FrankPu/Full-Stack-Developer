1.多进程/多线程
  多进程——重：独立存储空间                       PHP
    优点：安全、简单
    缺点：性能低

  多线程——轻：同一个进程之内的线程共享空间         Java
    优点：性能高
    缺点：不安全、复杂


  WebWorker
  Node.js——cluster

--------------------------------------------------------------------------------

普通程序，没法创建进程
系统能

--------------------------------------------------------------------------------

如果想创建进程——分裂(fork)

--------------------------------------------------------------------------------

只有系统，才能完全全新创造进程：
1.通过复制自己创造新的进程
2.子进程不能再创造了

--------------------------------------------------------------------------------

一般主进程不干活、纯粹派生子进程；干活的是子进程

--------------------------------------------------------------------------------

主进程和子进程之间能够共享句柄(socket端口)

--------------------------------------------------------------------------------

2.框架-Express+KOA

Express   基于回调
KOA1.x    基于generator/yield
  KOA2.x  过渡：yield&await
  KOA3.x  基于async/await

Express
KOA(KOA3.x)

--------------------------------------------------------------------------------

Express

let server=express();
server.listen(8080);

server.get('/xxx', (req, res)=>{});
server.post('/xxx', (req, res)=>{});
server.use('/xxx', (req, res)=>{});

--------------------------------------------------------------------------------

中间件——插件

express通过中间件实现

server.get('/aaa', xxx);
server.get('/aaa', xxx);

--------------------------------------------------------------------------------

接口：
/reg?user=xxx&pass=xxx
  =>{code: 0, msg: "消息"}

注册用户：
1.检查数据
2.检查是否有这个用户
3.写入数据库

用户：数字、字母、下划线 6~32位
密码：任意字母 6位以上

--------------------------------------------------------------------------------

1.express拆分处理步骤——流水线
2.express使用get数据——req.query

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------

egg、thinkjs
