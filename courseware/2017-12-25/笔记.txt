1.前台——用户看见
2.后台——数据、接口
3.后台管理——管理员

知识点：
1.数据交互
2.数据库
3.Node：框架(Express、KOA)、接口、身份认证、服务端渲染
4.后台管理：增删改查、文件操作

--------------------------------------------------------------------------------

项目：
1.数据字典——哪些域
2.接口——哪些接口、哪些数据
3.前台库——原生+jQuery
4.后台库——原生、express、KOA
5.后台管理：bootstrap
6.数据库：MySQL、Oracle、MongoDB、Redis

--------------------------------------------------------------------------------

Node.js：
1.接口
2.数据处理(GET/POST/FILE)
3.身份验证(cookie/session)

--------------------------------------------------------------------------------

Express/KOA

--------------------------------------------------------------------------------

后台管理：
1.布局
2.功能

--------------------------------------------------------------------------------

前台展现：

--------------------------------------------------------------------------------

原生Node.js：
1.数据交互
2.文件
3.压缩                zlib
4.管道操作            stream
5.接口管理(Router)    router

--------------------------------------------------------------------------------

1.GET方式
2.POST方式——urlencoded
3.POST方式——form-data

--------------------------------------------------------------------------------

------WebKitFormBoundaryq9dAWVB72Rj30S9c
Content-Disposition: form-data; name="user"

blue
------WebKitFormBoundaryq9dAWVB72Rj30S9c
Content-Disposition: form-data; name="pass"

123456
------WebKitFormBoundaryq9dAWVB72Rj30S9c
Content-Disposition: form-data; name="f1"; filename="1.txt"
Content-Type: text/plain

aaa
bbb
ccc
------WebKitFormBoundaryq9dAWVB72Rj30S9c--

--------------------------------------------------------------------------------

<分隔符>\r\n
Content-Disposition: form-data; name="user"\r\n
\r\n
数据1\r\n
<分隔符>\r\n
Content-Disposition: form-data; name="pass"\r\n
\r\n
数据2\r\n
<分隔符>\r\n
Content-Disposition: form-data; name="f1"; filename="1.txt"\r\n
Content-Type: text/plain\r\n
\r\n
数据\r\n
<分隔符>--

--------------------------------------------------------------------------------

<分隔符>\r\n
说明\r\n
\r\n
数据1\r\n
<分隔符>\r\n
说明\r\n
\r\n
数据2\r\n
<分隔符>\r\n
说明\r\n说明\r\n
\r\n
数据\r\n
<分隔符>--\r\n

--------------------------------------------------------------------------------

<分隔符>\r\n说明\r\n\r\n数据1\r\n<分隔符>\r\n说明\r\n\r\n数据2\r\n<分隔符>\r\n说明\r\n说明\r\n\r\n数据\r\n<分隔符>--\r\n

--------------------------------------------------------------------------------

1.用"<分隔符>"切分：
[<>, <\r\n说明\r\n\r\n数据1\r\n>, <\r\n说明\r\n\r\n数据2\r\n>, <\r\n说明\r\n说明\r\n\r\n数据\r\n>, <--\r\n>]

--------------------------------------------------------------------------------

2.头尾扔掉
[<\r\n说明\r\n\r\n数据1\r\n>, <\r\n说明\r\n\r\n数据2\r\n>, <\r\n说明\r\n说明\r\n\r\n数据\r\n>]

--------------------------------------------------------------------------------

3.每一项处理
<\r\n说明\r\n\r\n数据1\r\n>
<\r\n说明\r\n说明\r\n\r\n数据\r\n>

3-1.扔掉头尾的\r\n
<说明\r\n\r\n数据>
<说明\r\n说明\r\n\r\n数据>

3-2.找到第一个"\r\n\r\n"，用于分割成两半
<说明>, <数据>
<说明\r\n说明>, <数据>

3-3.说明.toString()
"说明", "数据"
"说明\r\n说明", <数据>

--------------------------------------------------------------------------------

----WebKitFormBoundarycWYtzRXqfQ0WZSeF
------WebKitFormBoundarycWYtzRXqfQ0WZSeF

--------------------------------------------------------------------------------

zlib
stream
router怎么实现

express

--------------------------------------------------------------------------------
